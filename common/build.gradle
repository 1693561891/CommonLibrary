apply from: rootProject.file('basic_component.gradle')


android {
    compileSdkVersion var.compileSdkVersion
//    buildToolsVersion props["ANDROID_BUILD_SDK_TOOLS_VERSION"]
    defaultConfig {
        minSdkVersion var.minSdkVersion
        targetSdkVersion var.targetSdkVersion
        versionCode var.versionCode
        versionName var.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
}

dependencies {
    api project(':common_res')

    implementation project(':android-support:skin-support')
    implementation project(':android-support:skin-support-appcompat')
    implementation project(':android-support:skin-support-cardview')
    implementation project(':android-support:skin-support-constraint-layout')
    implementation project(':android-support:skin-support-design')

    api 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    //显示图片框架
    api 'com.facebook.fresco:fresco:1.10.0'
    implementation "com.facebook.fresco:imagepipeline-okhttp3:1.10.0"
// 支持 GIF 动图，需要添加
    implementation 'com.facebook.fresco:animated-gif:1.10.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.15'
    implementation 'jp.wasabeef:fresco-processors:2.1.0'
//打印日志
    implementation 'com.orhanobut:logger:1.13'
    //    网络调试工具
    implementation 'com.facebook.stetho:stetho:1.4.2'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.4.2'
    //1.1.0 API改动过大，老用户升级需谨慎
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-5'
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-5'
    //没有使用特殊Header，可以不加这行
    //    compile "com.android.support:appcompat-v7:"+props.getAt("ANDROID_BUILD_SDK_TOOLS_VERSION")//版本 23以上（必须）
    api "ch.acra:acra-http:$var.acraVersion"
    api "ch.acra:acra-toast:$var.acraVersion"

    api project(':javapoet:annotation')
    debugAnnotationProcessor project(':javapoet:compiler')
    releaseAnnotationProcessor project(':javapoet:compiler-release')
}
repositories {
    mavenCentral()
}