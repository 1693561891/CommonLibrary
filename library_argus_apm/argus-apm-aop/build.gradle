apply plugin: 'com.android.library'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.versionCode
        versionName build_versions.versionName
        consumerProguardFiles 'argus-apm-aop.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'com.argusapm.android.aop.BuildConfig.java'
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    if (ArgusAPM_Release) {
        compileOnly project(':argus-apm-main')
    } else {
        releaseCompileOnly project(path: ':argus-apm-main', configuration: 'release')
        debugCompileOnly project(path: ':argus-apm-main', configuration: 'debug')
    }
    compileOnly 'org.aspectj:aspectjrt:1.9.2'
    compileOnly 'org.aspectj:aspectjtools:1.9.2'
//    compileOnly files('libs/aspectjrt-1.9.2.jar')
//    compileOnly files('libs/aspectjtools-1.9.2.jar')
}

afterEvaluate {
    generateReleaseBuildConfig.enabled = false
    generateDebugBuildConfig.enabled = false
}

//-----------------------------------以下为通过ajc编译AspectJ相关的代码-----------------------------------------------
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.9.2'
    }

}

repositories {
    mavenCentral()
    jcenter()
}

final def log = project.logger
final def variants = project.android.libraryVariants

variants.all { variant ->
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.quiet "ajc args:---" + variant.buildType.name + "----" + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}

ext {
    maven_repo_release_url = "http://45.63.19.1:8081/repository/maven-releases/"
    pom_project_name ='argus-apm-aop'
    pom_project_version ='2.0.1.1006'
    pom_project_artifactId ='argus-apm-aop'
    pom_project_groupId ='com.android'
    pom_project_packaging ='aar'
    pom_project_description ='argus-apm.sdk'
}

//apply from: file("${rootDir}/buildscript/nexus_maven.gradle")
